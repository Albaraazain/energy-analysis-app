{
    "sourceFile": "src/error/ErrorBoundary.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1730298228816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730299916644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-# File: src/components/error/ErrorBoundary.js\r\n \r\n import React, { Component } from 'react';\r\n import { Card } from '../components/ui/card';\r\n \r\n"
                },
                {
                    "date": 1730300525810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n \r\n import React, { Component } from 'react';\r\n-import { Card } from '../components/ui/card';\r\n-\r\n+import { Card } from '../ui/card';\r\n class ErrorBoundary extends Component {\r\n   constructor(props) {\r\n     super(props);\r\n     this.state = { \r\n"
                }
            ],
            "date": 1730298228816,
            "name": "Commit-0",
            "content": "# File: src/components/error/ErrorBoundary.js\r\n\r\nimport React, { Component } from 'react';\r\nimport { Card } from '../components/ui/card';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    });\r\n\r\n    // Log error to your preferred logging service\r\n    console.error('Error caught by boundary:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Card className=\"p-6 m-4 bg-red-50\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-xl font-semibold text-red-700 mb-2\">\r\n              Something went wrong\r\n            </h2>\r\n            <p className=\"text-red-600 mb-4\">\r\n              {this.state.error && this.state.error.toString()}\r\n            </p>\r\n            <button\r\n              onClick={() => this.setState({ hasError: false })}\r\n              className=\"px-4 py-2 bg-red-600 text-white rounded-lg \r\n                       hover:bg-red-700 transition-colors\"\r\n            >\r\n              Try Again\r\n            </button>\r\n          </div>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;"
        }
    ]
}