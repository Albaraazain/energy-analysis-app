{
    "sourceFile": "src/components/chat/Message.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1730297551061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730299907731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-# File: src/components/chat/Message.js\r\n \r\n import React from 'react';\r\n import { formatDate } from '../../utils/dateUtils';\r\n import VisualizationRenderer from '../visualization/VisualizationRenderer';\r\n"
                },
                {
                    "date": 1730300368604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \r\n import React from 'react';\r\n-import { formatDate } from '../../utils/dateUtils';\r\n+import { formatDate } from '../../../utils/data-utils';\r\n import VisualizationRenderer from '../visualization/VisualizationRenderer';\r\n \r\n const Message = ({ message }) => {\r\n   const {\r\n"
                },
                {
                    "date": 1730300417200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \r\n import React from 'react';\r\n-import { formatDate } from '../../../utils/data-utils';\r\n+import { formatDate } from '../../utils/data-utils';\r\n import VisualizationRenderer from '../visualization/VisualizationRenderer';\r\n \r\n const Message = ({ message }) => {\r\n   const {\r\n"
                },
                {
                    "date": 1730300497676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \r\n import React from 'react';\r\n import { formatDate } from '../../utils/data-utils';\r\n-import VisualizationRenderer from '../visualization/VisualizationRenderer';\r\n+import VisualizationRenderer from '../../visualization/VisualizationRenderer';\r\n \r\n const Message = ({ message }) => {\r\n   const {\r\n     type,\r\n"
                },
                {
                    "date": 1730300502814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+\r\n+import React from 'react';\r\n+import { formatDate } from '../../utils/data-utils';\r\n+import VisualizationRenderer from '../../visualization/VisualizationRenderer';\r\n+\r\n+const Message = ({ message }) => {\r\n+  const {\r\n+    type,\r\n+    content,\r\n+    timestamp,\r\n+    visualizations,\r\n+    isError\r\n+  } = message;\r\n+\r\n+  const isSystem = type === 'system';\r\n+\r\n+  return (\r\n+    <div\r\n+      className={`flex ${isSystem ? 'justify-start' : 'justify-end'}`}\r\n+    >\r\n+      <div className=\"max-w-[80%]\">\r\n+        {/* Message Content */}\r\n+        <div\r\n+          className={`rounded-lg p-4 ${\r\n+            isSystem\r\n+              ? isError\r\n+                ? 'bg-red-50 text-red-700'\r\n+                : 'bg-gray-100 text-gray-900'\r\n+              : 'bg-blue-500 text-white'\r\n+          }`}\r\n+        >\r\n+          {/* Message Text */}\r\n+          <div className=\"text-sm whitespace-pre-wrap\">{content}</div>\r\n+\r\n+          {/* Timestamp */}\r\n+          <div className=\"text-xs mt-2 opacity-75\">\r\n+            {formatDate(new Date(timestamp))}\r\n+          </div>\r\n+\r\n+          {/* Visualizations */}\r\n+          {visualizations && visualizations.length > 0 && (\r\n+            <div className=\"mt-4 space-y-4\">\r\n+              {visualizations.map((viz, index) => (\r\n+                <VisualizationRenderer\r\n+                  key={index}\r\n+                  visualization={viz}\r\n+                />\r\n+              ))}\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Suggested Actions (for system messages) */}\r\n+        {isSystem && !isError && message.actions && (\r\n+          <div className=\"mt-2 flex flex-wrap gap-2\">\r\n+            {message.actions.map((action, index) => (\r\n+              <button\r\n+                key={index}\r\n+                onClick={() => action.handler()}\r\n+                className=\"text-sm px-3 py-1 rounded-full bg-gray-200 \r\n+                         hover:bg-gray-300 text-gray-700 transition-colors\"\r\n+              >\r\n+                {action.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Message;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730300522534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,78 +69,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default Message;\n-\r\n-import React from 'react';\r\n-import { formatDate } from '../../utils/data-utils';\r\n-import VisualizationRenderer from '../../visualization/VisualizationRenderer';\r\n-\r\n-const Message = ({ message }) => {\r\n-  const {\r\n-    type,\r\n-    content,\r\n-    timestamp,\r\n-    visualizations,\r\n-    isError\r\n-  } = message;\r\n-\r\n-  const isSystem = type === 'system';\r\n-\r\n-  return (\r\n-    <div\r\n-      className={`flex ${isSystem ? 'justify-start' : 'justify-end'}`}\r\n-    >\r\n-      <div className=\"max-w-[80%]\">\r\n-        {/* Message Content */}\r\n-        <div\r\n-          className={`rounded-lg p-4 ${\r\n-            isSystem\r\n-              ? isError\r\n-                ? 'bg-red-50 text-red-700'\r\n-                : 'bg-gray-100 text-gray-900'\r\n-              : 'bg-blue-500 text-white'\r\n-          }`}\r\n-        >\r\n-          {/* Message Text */}\r\n-          <div className=\"text-sm whitespace-pre-wrap\">{content}</div>\r\n-\r\n-          {/* Timestamp */}\r\n-          <div className=\"text-xs mt-2 opacity-75\">\r\n-            {formatDate(new Date(timestamp))}\r\n-          </div>\r\n-\r\n-          {/* Visualizations */}\r\n-          {visualizations && visualizations.length > 0 && (\r\n-            <div className=\"mt-4 space-y-4\">\r\n-              {visualizations.map((viz, index) => (\r\n-                <VisualizationRenderer\r\n-                  key={index}\r\n-                  visualization={viz}\r\n-                />\r\n-              ))}\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Suggested Actions (for system messages) */}\r\n-        {isSystem && !isError && message.actions && (\r\n-          <div className=\"mt-2 flex flex-wrap gap-2\">\r\n-            {message.actions.map((action, index) => (\r\n-              <button\r\n-                key={index}\r\n-                onClick={() => action.handler()}\r\n-                className=\"text-sm px-3 py-1 rounded-full bg-gray-200 \r\n-                         hover:bg-gray-300 text-gray-700 transition-colors\"\r\n-              >\r\n-                {action.label}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n export default Message;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730300873962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \r\n import React from 'react';\r\n import { formatDate } from '../../utils/data-utils';\r\n-import VisualizationRenderer from '../../visualization/VisualizationRenderer';\r\n+import VisualizationRenderer from '../visualization/visualizationRenderer';\r\n \r\n const Message = ({ message }) => {\r\n   const {\r\n     type,\r\n"
                }
            ],
            "date": 1730297551061,
            "name": "Commit-0",
            "content": "# File: src/components/chat/Message.js\r\n\r\nimport React from 'react';\r\nimport { formatDate } from '../../utils/dateUtils';\r\nimport VisualizationRenderer from '../visualization/VisualizationRenderer';\r\n\r\nconst Message = ({ message }) => {\r\n  const {\r\n    type,\r\n    content,\r\n    timestamp,\r\n    visualizations,\r\n    isError\r\n  } = message;\r\n\r\n  const isSystem = type === 'system';\r\n\r\n  return (\r\n    <div\r\n      className={`flex ${isSystem ? 'justify-start' : 'justify-end'}`}\r\n    >\r\n      <div className=\"max-w-[80%]\">\r\n        {/* Message Content */}\r\n        <div\r\n          className={`rounded-lg p-4 ${\r\n            isSystem\r\n              ? isError\r\n                ? 'bg-red-50 text-red-700'\r\n                : 'bg-gray-100 text-gray-900'\r\n              : 'bg-blue-500 text-white'\r\n          }`}\r\n        >\r\n          {/* Message Text */}\r\n          <div className=\"text-sm whitespace-pre-wrap\">{content}</div>\r\n\r\n          {/* Timestamp */}\r\n          <div className=\"text-xs mt-2 opacity-75\">\r\n            {formatDate(new Date(timestamp))}\r\n          </div>\r\n\r\n          {/* Visualizations */}\r\n          {visualizations && visualizations.length > 0 && (\r\n            <div className=\"mt-4 space-y-4\">\r\n              {visualizations.map((viz, index) => (\r\n                <VisualizationRenderer\r\n                  key={index}\r\n                  visualization={viz}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Suggested Actions (for system messages) */}\r\n        {isSystem && !isError && message.actions && (\r\n          <div className=\"mt-2 flex flex-wrap gap-2\">\r\n            {message.actions.map((action, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => action.handler()}\r\n                className=\"text-sm px-3 py-1 rounded-full bg-gray-200 \r\n                         hover:bg-gray-300 text-gray-700 transition-colors\"\r\n              >\r\n                {action.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;"
        }
    ]
}