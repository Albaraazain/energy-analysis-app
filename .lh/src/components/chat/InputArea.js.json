{
    "sourceFile": "src/components/chat/InputArea.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1730297567155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730299906302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-# File: src/components/chat/InputArea.js\r\n \r\n import React, { useState, useRef, useEffect } from 'react';\r\n \r\n const InputArea = ({ onSubmit, isProcessing }) => {\r\n"
                }
            ],
            "date": 1730297567155,
            "name": "Commit-0",
            "content": "# File: src/components/chat/InputArea.js\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst InputArea = ({ onSubmit, isProcessing }) => {\r\n  const [input, setInput] = useState('');\r\n  const [rows, setRows] = useState(1);\r\n  const textareaRef = useRef(null);\r\n\r\n  // Auto-resize textarea\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      // Reset height to get actual scroll height\r\n      textareaRef.current.style.height = 'auto';\r\n      \r\n      const newRows = Math.min(\r\n        Math.ceil(textareaRef.current.scrollHeight / 24), // Line height is 24px\r\n        5 // Max 5 rows\r\n      );\r\n      \r\n      setRows(newRows);\r\n      textareaRef.current.style.height = `${newRows * 24}px`;\r\n    }\r\n  }, [input]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!input.trim() || isProcessing) return;\r\n\r\n    try {\r\n      await onSubmit(input.trim());\r\n      setInput('');\r\n      setRows(1);\r\n    } catch (error) {\r\n      console.error('Error submitting message:', error);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-t p-4\">\r\n      <form onSubmit={handleSubmit} className=\"flex space-x-4\">\r\n        <div className=\"flex-1 relative\">\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            rows={rows}\r\n            placeholder={\r\n              isProcessing\r\n                ? \"Processing your request...\"\r\n                : \"Ask about your energy usage...\"\r\n            }\r\n            disabled={isProcessing}\r\n            className=\"w-full px-4 py-2 text-sm border rounded-lg focus:outline-none \r\n                     focus:border-blue-500 resize-none disabled:bg-gray-50\r\n                     disabled:text-gray-500\"\r\n          />\r\n          \r\n          {/* Character count */}\r\n          <div className=\"absolute bottom-2 right-2 text-xs text-gray-400\">\r\n            {input.length}/500\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!input.trim() || isProcessing}\r\n          className={`px-6 py-2 rounded-lg text-white font-medium\r\n                    transition-colors focus:outline-none\r\n                    ${\r\n                      !input.trim() || isProcessing\r\n                        ? 'bg-gray-300 cursor-not-allowed'\r\n                        : 'bg-blue-500 hover:bg-blue-600'\r\n                    }`}\r\n        >\r\n          {isProcessing ? (\r\n            <span className=\"flex items-center\">\r\n              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" \r\n                   xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" \r\n                        stroke=\"currentColor\" strokeWidth=\"4\"/>\r\n                <path className=\"opacity-75\" fill=\"currentColor\" \r\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"/>\r\n              </svg>\r\n              Processing\r\n            </span>\r\n          ) : (\r\n            'Send'\r\n          )}\r\n        </button>\r\n      </form>\r\n\r\n      {/* Suggested queries */}\r\n      <div className=\"mt-3 flex flex-wrap gap-2\">\r\n        <button\r\n          onClick={() => setInput(\"How much energy did I use yesterday?\")}\r\n          className=\"text-xs px-3 py-1 rounded-full bg-gray-100 \r\n                   hover:bg-gray-200 text-gray-600 transition-colors\"\r\n        >\r\n          Yesterday's usage\r\n        </button>\r\n        <button\r\n          onClick={() => setInput(\"What's my typical daily consumption?\")}\r\n          className=\"text-xs px-3 py-1 rounded-full bg-gray-100 \r\n                   hover:bg-gray-200 text-gray-600 transition-colors\"\r\n        >\r\n          Typical usage\r\n        </button>\r\n        <button\r\n          onClick={() => setInput(\"Any unusual consumption patterns?\")}\r\n          className=\"text-xs px-3 py-1 rounded-full bg-gray-100 \r\n                   hover:bg-gray-200 text-gray-600 transition-colors\"\r\n        >\r\n          Unusual patterns\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputArea;"
        }
    ]
}