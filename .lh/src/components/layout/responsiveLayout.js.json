{
    "sourceFile": "src/components/layout/responsiveLayout.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1730298974828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730299004404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-# File: src/components/layout/ResponsiveLayouts.js\r\n \r\n import React from 'react';\r\n import { theme } from '../../styles/theme';\r\n \r\n"
                }
            ],
            "date": 1730298974828,
            "name": "Commit-0",
            "content": "# File: src/components/layout/ResponsiveLayouts.js\r\n\r\nimport React from 'react';\r\nimport { theme } from '../../styles/theme';\r\n\r\n// Responsive grid component\r\nexport const ResponsiveGrid = ({\r\n  children,\r\n  columns = { sm: 1, md: 2, lg: 3 },\r\n  gap = 'md',\r\n  className = ''\r\n}) => {\r\n  const gaps = {\r\n    sm: theme.spacing.sm,\r\n    md: theme.spacing.md,\r\n    lg: theme.spacing.lg\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`grid ${className}`}\r\n      style={{\r\n        gap: gaps[gap],\r\n        gridTemplateColumns: `repeat(${columns.sm}, 1fr)`,\r\n        [`@media (min-width: ${theme.breakpoints.md})`]: {\r\n          gridTemplateColumns: `repeat(${columns.md}, 1fr)`\r\n        },\r\n        [`@media (min-width: ${theme.breakpoints.lg})`]: {\r\n          gridTemplateColumns: `repeat(${columns.lg}, 1fr)`\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Responsive container\r\nexport const Container = ({\r\n  children,\r\n  maxWidth = 'lg',\r\n  padding = true,\r\n  className = ''\r\n}) => {\r\n  const maxWidths = {\r\n    sm: theme.breakpoints.sm,\r\n    md: theme.breakpoints.md,\r\n    lg: theme.breakpoints.lg,\r\n    xl: theme.breakpoints.xl\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`mx-auto ${padding ? 'px-4 sm:px-6 lg:px-8' : ''} ${className}`}\r\n      style={{ maxWidth: maxWidths[maxWidth] }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Responsive stack (vertical layout)\r\nexport const Stack = ({\r\n  children,\r\n  spacing = 'md',\r\n  className = ''\r\n}) => {\r\n  const spacings = {\r\n    sm: theme.spacing.sm,\r\n    md: theme.spacing.md,\r\n    lg: theme.spacing.lg\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`flex flex-col ${className}`}\r\n      style={{ gap: spacings[spacing] }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Responsive sidebar layout\r\nexport const SidebarLayout = ({\r\n  sidebar,\r\n  children,\r\n  sidebarWidth = '300px',\r\n  className = ''\r\n}) => {\r\n  const [isMobile, setIsMobile] = React.useState(false);\r\n  const [isSidebarOpen, setSidebarOpen] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const checkMobile = () => {\r\n      setIsMobile(window.innerWidth < parseInt(theme.breakpoints.lg));\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    return () => window.removeEventListener('resize', checkMobile);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`flex h-full ${className}`}>\r\n      {/* Sidebar */}\r\n      <div\r\n        className={`\r\n          ${isMobile ? 'fixed inset-y-0 left-0 z-50 transform' : 'relative'}\r\n          ${isMobile && !isSidebarOpen ? '-translate-x-full' : 'translate-x-0'}\r\n          transition-transform duration-300 ease-in-out\r\n          bg-white\r\n        `}\r\n        style={{ width: sidebarWidth }}\r\n      >\r\n        {sidebar}\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"flex-1 min-w-0\">\r\n        {isMobile && (\r\n          <button\r\n            onClick={() => setSidebarOpen(!isSidebarOpen)}\r\n            className=\"fixed top-4 left-4 z-50 p-2 bg-white rounded-md shadow-lg\"\r\n          >\r\n            {isSidebarOpen ? '←' : '→'}\r\n          </button>\r\n        )}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Responsive navigation\r\nexport const ResponsiveNav = ({\r\n  brand,\r\n  links,\r\n  actions,\r\n  className = ''\r\n}) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <nav className={`bg-white shadow ${className}`}>\r\n      <Container>\r\n        <div className=\"flex justify-between h-16\">\r\n          {/* Brand and toggle button */}\r\n          <div className=\"flex\">\r\n            <div className=\"flex items-center\">\r\n              {brand}\r\n            </div>\r\n            <button\r\n              onClick={() => setIsOpen(!isOpen)}\r\n              className=\"md:hidden p-2\"\r\n            >\r\n              {isOpen ? '×' : '☰'}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Desktop navigation */}\r\n          <div className=\"hidden md:flex items-center space-x-4\">\r\n            {links}\r\n            {actions}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mobile navigation */}\r\n        {isOpen && (\r\n          <div className=\"md:hidden py-2\">\r\n            {links}\r\n            <div className=\"mt-4 pt-4 border-t\">\r\n              {actions}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </nav>\r\n  );\r\n};"
        }
    ]
}