{
    "sourceFile": "src/components/common/AccessibleComponents.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1730298875671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730298894661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,9 +183,9 @@\n         {content}\r\n       </div>\r\n     </div>\r\n   );\r\n-});\r\n+}\r\n \r\n // Loading spinner\r\n export const LoadingSpinner = ({ size = 'md', className = '' }) => {\r\n   const sizes = {\r\n"
                },
                {
                    "date": 1730298899890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-# File: src/components/common/AccessibleComponents.js\r\n \r\n import React, { forwardRef } from 'react';\r\n import { theme } from '../../styles/theme';\r\n \r\n"
                }
            ],
            "date": 1730298875671,
            "name": "Commit-0",
            "content": "# File: src/components/common/AccessibleComponents.js\r\n\r\nimport React, { forwardRef } from 'react';\r\nimport { theme } from '../../styles/theme';\r\n\r\n// Accessible button with keyboard interaction\r\nexport const Button = forwardRef(({ \r\n  children, \r\n  variant = 'primary',\r\n  size = 'md',\r\n  disabled,\r\n  loading,\r\n  onClick,\r\n  className,\r\n  ...props \r\n}, ref) => {\r\n  const baseStyles = `\r\n    inline-flex items-center justify-center\r\n    rounded-lg font-medium transition-colors\r\n    focus:outline-none focus:ring-2 focus:ring-offset-2\r\n    disabled:opacity-50 disabled:cursor-not-allowed\r\n  `;\r\n\r\n  const variants = {\r\n    primary: `bg-primary-500 text-white hover:bg-primary-600\r\n              focus:ring-primary-500`,\r\n    secondary: `bg-neutral-100 text-neutral-700 hover:bg-neutral-200\r\n                focus:ring-neutral-500`,\r\n    danger: `bg-error-500 text-white hover:bg-error-600\r\n             focus:ring-error-500`,\r\n  };\r\n\r\n  const sizes = {\r\n    sm: 'px-3 py-1.5 text-sm',\r\n    md: 'px-4 py-2 text-base',\r\n    lg: 'px-6 py-3 text-lg',\r\n  };\r\n\r\n  return (\r\n    <button\r\n      ref={ref}\r\n      className={`${baseStyles} ${variants[variant]} ${sizes[size]} ${className}`}\r\n      disabled={disabled || loading}\r\n      onClick={onClick}\r\n      {...props}\r\n    >\r\n      {loading && (\r\n        <span className=\"mr-2\">\r\n          <LoadingSpinner size=\"sm\" />\r\n        </span>\r\n      )}\r\n      {children}\r\n    </button>\r\n  );\r\n});\r\n\r\n// Accessible form input\r\nexport const Input = forwardRef(({ \r\n  label,\r\n  error,\r\n  helperText,\r\n  required,\r\n  ...props \r\n}, ref) => {\r\n  const id = `input-${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n  return (\r\n    <div className=\"space-y-1\">\r\n      {label && (\r\n        <label\r\n          htmlFor={id}\r\n          className=\"block text-sm font-medium text-neutral-700\"\r\n        >\r\n          {label}\r\n          {required && <span className=\"text-error-500 ml-1\">*</span>}\r\n        </label>\r\n      )}\r\n      <input\r\n        ref={ref}\r\n        id={id}\r\n        className={`\r\n          w-full rounded-lg border px-4 py-2\r\n          focus:outline-none focus:ring-2 focus:border-primary-500\r\n          disabled:bg-neutral-50 disabled:text-neutral-500\r\n          ${error ? 'border-error-500' : 'border-neutral-300'}\r\n        `}\r\n        aria-invalid={error ? 'true' : 'false'}\r\n        aria-describedby={`${id}-helper ${id}-error`}\r\n        {...props}\r\n      />\r\n      {helperText && (\r\n        <p\r\n          id={`${id}-helper`}\r\n          className=\"text-sm text-neutral-500\"\r\n        >\r\n          {helperText}\r\n        </p>\r\n      )}\r\n      {error && (\r\n        <p\r\n          id={`${id}-error`}\r\n          className=\"text-sm text-error-500\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\n// Accessible toggle switch\r\nexport const Toggle = forwardRef(({ \r\n  checked, \r\n  onChange,\r\n  label,\r\n  disabled,\r\n  ...props \r\n}, ref) => {\r\n  const id = `toggle-${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      <button\r\n        ref={ref}\r\n        id={id}\r\n        role=\"switch\"\r\n        aria-checked={checked}\r\n        aria-label={label}\r\n        onClick={() => !disabled && onChange(!checked)}\r\n        className={`\r\n          relative inline-flex h-6 w-11 items-center rounded-full\r\n          transition-colors focus:outline-none focus:ring-2\r\n          focus:ring-primary-500 focus:ring-offset-2\r\n          ${checked ? 'bg-primary-500' : 'bg-neutral-200'}\r\n          ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\r\n        `}\r\n        disabled={disabled}\r\n        {...props}\r\n      >\r\n        <span\r\n          className={`\r\n            inline-block h-4 w-4 rounded-full bg-white\r\n            transform transition-transform\r\n            ${checked ? 'translate-x-6' : 'translate-x-1'}\r\n          `}\r\n        />\r\n      </button>\r\n      {label && (\r\n        <label\r\n          htmlFor={id}\r\n          className=\"ml-3 text-sm text-neutral-700\"\r\n        >\r\n          {label}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\n// Tooltip component\r\nexport const Tooltip = ({ children, content, position = 'top' }) => {\r\n  const positions = {\r\n    top: 'bottom-full mb-2',\r\n    bottom: 'top-full mt-2',\r\n    left: 'right-full mr-2',\r\n    right: 'left-full ml-2',\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative group\">\r\n      {children}\r\n      <div\r\n        className={`\r\n          absolute ${positions[position]} px-2 py-1\r\n          bg-neutral-800 text-white text-sm rounded\r\n          opacity-0 invisible group-hover:opacity-100 group-hover:visible\r\n          transition-all duration-200\r\n          whitespace-nowrap\r\n        `}\r\n        role=\"tooltip\"\r\n      >\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\n// Loading spinner\r\nexport const LoadingSpinner = ({ size = 'md', className = '' }) => {\r\n  const sizes = {\r\n    sm: 'h-4 w-4',\r\n    md: 'h-6 w-6',\r\n    lg: 'h-8 w-8',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`\r\n        animate-spin rounded-full\r\n        border-2 border-neutral-200\r\n        border-t-primary-500\r\n        ${sizes[size]}\r\n        ${className}\r\n      `}\r\n      role=\"status\"\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Alert component\r\nexport const Alert = ({ \r\n  type = 'info',\r\n  title,\r\n  children,\r\n  onClose,\r\n}) => {\r\n  const types = {\r\n    info: 'bg-primary-50 text-primary-700 border-primary-500',\r\n    success: 'bg-success-50 text-success-700 border-success-500',\r\n    warning: 'bg-warning-50 text-warning-700 border-warning-500',\r\n    error: 'bg-error-50 text-error-700 border-error-500',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      role=\"alert\"\r\n      className={`\r\n        rounded-lg border-l-4 p-4\r\n        ${types[type]}\r\n      `}\r\n    >\r\n      {title && (\r\n        <h3 className=\"font-medium mb-1\">{title}</h3>\r\n      )}\r\n      <div className=\"text-sm\">{children}</div>\r\n      {onClose && (\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-neutral-400 hover:text-neutral-500\"\r\n          aria-label=\"Close alert\"\r\n        >\r\n          Ã—\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};"
        }
    ]
}