{
    "sourceFile": "src/components/visualization/visualizationRenderer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1730300831481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1730300831481,
            "name": "Commit-0",
            "content": "# File: src/components/visualization/VisualizationRenderer.js\r\n\r\nimport React from 'react';\r\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { Card } from '../ui/card';\r\n\r\nconst VisualizationRenderer = ({ visualization }) => {\r\n  const { type, data, title, config = {} } = visualization;\r\n\r\n  if (!data || data.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const renderChart = () => {\r\n    switch (type) {\r\n      case 'line':\r\n        return (\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis \r\n                dataKey={config.xAxis || 'timestamp'} \r\n                tickFormatter={config.xAxisFormatter}\r\n              />\r\n              <YAxis\r\n                label={{ \r\n                  value: config.yAxisLabel || 'Energy (kWh)',\r\n                  angle: -90,\r\n                  position: 'insideLeft'\r\n                }}\r\n              />\r\n              <Tooltip />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey={config.dataKey || 'value'} \r\n                stroke=\"#3b82f6\" \r\n                strokeWidth={2}\r\n                dot={false}\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        );\r\n\r\n      case 'bar':\r\n        return (\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis \r\n                dataKey={config.xAxis || 'timestamp'}\r\n                tickFormatter={config.xAxisFormatter}\r\n              />\r\n              <YAxis\r\n                label={{ \r\n                  value: config.yAxisLabel || 'Energy (kWh)',\r\n                  angle: -90,\r\n                  position: 'insideLeft'\r\n                }}\r\n              />\r\n              <Tooltip />\r\n              <Bar \r\n                dataKey={config.dataKey || 'value'} \r\n                fill=\"#3b82f6\"\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n\r\n      case 'stats':\r\n        return (\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            {data.map((stat, index) => (\r\n              <div \r\n                key={index}\r\n                className=\"p-4 bg-blue-50 rounded-lg\"\r\n              >\r\n                <div className=\"text-sm text-blue-600 font-medium\">\r\n                  {stat.label}\r\n                </div>\r\n                <div className=\"text-xl font-semibold\">\r\n                  {stat.value} {stat.unit}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <div className=\"text-gray-500\">\r\n            Unsupported visualization type: {type}\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mt-4\">\r\n      {title && (\r\n        <div className=\"px-4 py-2 border-b\">\r\n          <h3 className=\"text-lg font-medium\">{title}</h3>\r\n        </div>\r\n      )}\r\n      <div className=\"p-4\">\r\n        {renderChart()}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default VisualizationRenderer;"
        }
    ]
}