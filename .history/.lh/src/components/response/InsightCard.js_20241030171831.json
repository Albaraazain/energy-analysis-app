{
    "sourceFile": "src/components/response/InsightCard.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1730297751231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730297763714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-# File: src/components/response/InsightCard.js\r\n \r\n import React from 'react';\r\n import { Card } from '@/components/ui/card';\r\n \r\n"
                },
                {
                    "date": 1730297774888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,111 +38,4 @@\n       <p className=\"mt-1 text-sm opacity-90\">{description}</p>\r\n     </Card>\r\n   );\r\n };\r\n-\r\n-# File: src/components/response/MetricDisplay.js\r\n-\r\n-import React from 'react';\r\n-import { Card } from '@/components/ui/card';\r\n-\r\n-const MetricDisplay = ({ title, value, unit, change, timeframe }) => {\r\n-  const formatValue = (val) => {\r\n-    if (typeof val === 'number') {\r\n-      return val.toFixed(2);\r\n-    }\r\n-    return val;\r\n-  };\r\n-\r\n-  const getChangeColor = () => {\r\n-    if (!change) return 'text-gray-500';\r\n-    return change > 0 ? 'text-green-600' : 'text-red-600';\r\n-  };\r\n-\r\n-  return (\r\n-    <Card className=\"p-4\">\r\n-      <div className=\"text-sm font-medium text-gray-500\">{title}</div>\r\n-      <div className=\"mt-1 flex items-baseline\">\r\n-        <div className=\"text-2xl font-semibold\">\r\n-          {formatValue(value)}\r\n-        </div>\r\n-        {unit && (\r\n-          <div className=\"ml-2 text-sm text-gray-500\">{unit}</div>\r\n-        )}\r\n-      </div>\r\n-      {(change || timeframe) && (\r\n-        <div className=\"mt-2 flex items-center text-sm\">\r\n-          {change && (\r\n-            <span className={`font-medium ${getChangeColor()}`}>\r\n-              {change > 0 ? '↑' : '↓'} {Math.abs(change)}%\r\n-            </span>\r\n-          )}\r\n-          {timeframe && (\r\n-            <span className=\"text-gray-500 ml-2\">\r\n-              vs {timeframe}\r\n-            </span>\r\n-          )}\r\n-        </div>\r\n-      )}\r\n-    </Card>\r\n-  );\r\n-};\r\n-\r\n-# File: src/components/response/ComparisonView.js\r\n-\r\n-import React from 'react';\r\n-import { Card } from '@/components/ui/card';\r\n-import {\r\n-  BarChart,\r\n-  Bar,\r\n-  XAxis,\r\n-  YAxis,\r\n-  Tooltip,\r\n-  ResponsiveContainer\r\n-} from 'recharts';\r\n-\r\n-const ComparisonView = ({ data, type }) => {\r\n-  const formatData = (data) => {\r\n-    switch (type) {\r\n-      case 'daily':\r\n-        return data.map(item => ({\r\n-          ...item,\r\n-          name: new Date(item.timestamp).toLocaleDateString('en-US', {\r\n-            weekday: 'short'\r\n-          })\r\n-        }));\r\n-      case 'hourly':\r\n-        return data.map(item => ({\r\n-          ...item,\r\n-          name: new Date(item.timestamp).getHours() + ':00'\r\n-        }));\r\n-      default:\r\n-        return data;\r\n-    }\r\n-  };\r\n-\r\n-  const formattedData = formatData(data);\r\n-\r\n-  return (\r\n-    <Card className=\"p-4\">\r\n-      <h4 className=\"font-medium text-gray-900 mb-4\">\r\n-        Consumption Comparison\r\n-      </h4>\r\n-      <div className=\"h-64\">\r\n-        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n-          <BarChart data={formattedData}>\r\n-            <XAxis dataKey=\"name\" />\r\n-            <YAxis />\r\n-            <Tooltip />\r\n-            <Bar\r\n-              dataKey=\"value\"\r\n-              fill=\"#3B82F6\"\r\n-              radius={[4, 4, 0, 0]}\r\n-            />\r\n-          </BarChart>\r\n-        </ResponsiveContainer>\r\n-      </div>\r\n-    </Card>\r\n-  );\r\n-};\r\n-\r\n-export default ComparisonView;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730297912115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,4 +38,6 @@\n       <p className=\"mt-1 text-sm opacity-90\">{description}</p>\r\n     </Card>\r\n   );\r\n };\r\n+\r\n+export default InsightCard;\r\n"
                }
            ],
            "date": 1730297751231,
            "name": "Commit-0",
            "content": "# File: src/components/response/InsightCard.js\r\n\r\nimport React from 'react';\r\nimport { Card } from '@/components/ui/card';\r\n\r\nconst InsightCard = ({ type, title, description, value, impact }) => {\r\n  const getTypeStyles = () => {\r\n    switch (type) {\r\n      case 'positive':\r\n        return 'bg-green-50 border-green-200 text-green-700';\r\n      case 'negative':\r\n        return 'bg-red-50 border-red-200 text-red-700';\r\n      case 'neutral':\r\n        return 'bg-blue-50 border-blue-200 text-blue-700';\r\n      default:\r\n        return 'bg-gray-50 border-gray-200 text-gray-700';\r\n    }\r\n  };\r\n\r\n  const getImpactIcon = () => {\r\n    if (impact > 0) {\r\n      return '↑';\r\n    } else if (impact < 0) {\r\n      return '↓';\r\n    }\r\n    return '→';\r\n  };\r\n\r\n  return (\r\n    <Card className={`p-4 border-l-4 ${getTypeStyles()}`}>\r\n      <div className=\"flex justify-between items-start\">\r\n        <h4 className=\"font-medium\">{title}</h4>\r\n        {value && (\r\n          <span className=\"text-sm font-semibold\">\r\n            {getImpactIcon()} {Math.abs(value)}%\r\n          </span>\r\n        )}\r\n      </div>\r\n      <p className=\"mt-1 text-sm opacity-90\">{description}</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\n# File: src/components/response/MetricDisplay.js\r\n\r\nimport React from 'react';\r\nimport { Card } from '@/components/ui/card';\r\n\r\nconst MetricDisplay = ({ title, value, unit, change, timeframe }) => {\r\n  const formatValue = (val) => {\r\n    if (typeof val === 'number') {\r\n      return val.toFixed(2);\r\n    }\r\n    return val;\r\n  };\r\n\r\n  const getChangeColor = () => {\r\n    if (!change) return 'text-gray-500';\r\n    return change > 0 ? 'text-green-600' : 'text-red-600';\r\n  };\r\n\r\n  return (\r\n    <Card className=\"p-4\">\r\n      <div className=\"text-sm font-medium text-gray-500\">{title}</div>\r\n      <div className=\"mt-1 flex items-baseline\">\r\n        <div className=\"text-2xl font-semibold\">\r\n          {formatValue(value)}\r\n        </div>\r\n        {unit && (\r\n          <div className=\"ml-2 text-sm text-gray-500\">{unit}</div>\r\n        )}\r\n      </div>\r\n      {(change || timeframe) && (\r\n        <div className=\"mt-2 flex items-center text-sm\">\r\n          {change && (\r\n            <span className={`font-medium ${getChangeColor()}`}>\r\n              {change > 0 ? '↑' : '↓'} {Math.abs(change)}%\r\n            </span>\r\n          )}\r\n          {timeframe && (\r\n            <span className=\"text-gray-500 ml-2\">\r\n              vs {timeframe}\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\n# File: src/components/response/ComparisonView.js\r\n\r\nimport React from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst ComparisonView = ({ data, type }) => {\r\n  const formatData = (data) => {\r\n    switch (type) {\r\n      case 'daily':\r\n        return data.map(item => ({\r\n          ...item,\r\n          name: new Date(item.timestamp).toLocaleDateString('en-US', {\r\n            weekday: 'short'\r\n          })\r\n        }));\r\n      case 'hourly':\r\n        return data.map(item => ({\r\n          ...item,\r\n          name: new Date(item.timestamp).getHours() + ':00'\r\n        }));\r\n      default:\r\n        return data;\r\n    }\r\n  };\r\n\r\n  const formattedData = formatData(data);\r\n\r\n  return (\r\n    <Card className=\"p-4\">\r\n      <h4 className=\"font-medium text-gray-900 mb-4\">\r\n        Consumption Comparison\r\n      </h4>\r\n      <div className=\"h-64\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <BarChart data={formattedData}>\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Bar\r\n              dataKey=\"value\"\r\n              fill=\"#3B82F6\"\r\n              radius={[4, 4, 0, 0]}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ComparisonView;"
        }
    ]
}